{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Google-Books-Search\\\\client\\\\src\\\\pages\\\\Saved.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar Saved =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Saved, _Component);\n\n  function Saved() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Saved);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Saved)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      link: \"\",\n      image: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        console.log(\"getBooks response:\", res);\n\n        _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          description: \"\",\n          link: \"\",\n          image: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Saved, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Col, {\n        size: \"md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Books You Have Saved\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          title: book.title,\n          author: book.author,\n          description: book.description,\n          link: book.link,\n          image: book.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteBook(book._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"No Results to Display\"))), React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Saved;\n}(Component);\n\nexport default Saved;","map":{"version":3,"sources":["C:\\Users\\Ryan\\Documents\\UNC\\GIT\\Google-Books-Search\\client\\src\\pages\\Saved.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Saved","state","books","title","author","description","link","image","loadBooks","getBooks","then","res","console","log","setState","data","catch","err","deleteBook","id","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nclass Saved extends Component {\r\n  state = {\r\n    books: [],\r\n    title: \"\",\r\n    author: \"\",\r\n    description: \"\",\r\n    link: \"\",\r\n    image: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res => {\r\n          console.log(\"getBooks response:\", res);\r\n            this.setState({ \r\n                books: res.data, \r\n                title: \"\", \r\n                author: \"\", \r\n                description: \"\",\r\n                link: \"\",\r\n                image: \"\"\r\n            });\r\n        }\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteBook = id => {\r\n    API.deleteBook(id)\r\n      .then(res => this.loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-2\"></Col>\r\n                <Col size=\"md-8\">\r\n                <Jumbotron>\r\n                    <h1>Books You Have Saved</h1>\r\n                </Jumbotron>\r\n                <div>\r\n                    {this.state.books.length ? (\r\n                    <List>\r\n                        {this.state.books.map(book => (\r\n\r\n<ListItem key={book._id} \r\ntitle={book.title}\r\nauthor={book.author}\r\ndescription={book.description}\r\nlink={book.link}\r\nimage={book.image}\r\n>\r\n                            <DeleteBtn onClick={() => this.deleteBook(book._id)} />\r\n                        </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    ) : (\r\n                    <h3>No Results to Display</h3>\r\n                    )}\r\n                </div>\r\n            {/* \r\n            <form>\r\n              <Input\r\n                value={this.state.title}\r\n                onChange={this.handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.author}\r\n                onChange={this.handleInputChange}\r\n                name=\"author\"\r\n                placeholder=\"Author (required)\"\r\n              />\r\n              <TextArea\r\n                value={this.state.synopsis}\r\n                onChange={this.handleInputChange}\r\n                name=\"synopsis\"\r\n                placeholder=\"Synopsis (Optional)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(this.state.author && this.state.title)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit Book\r\n              </FormBtn>\r\n            </form>\r\n            \r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Books On My List</h1>\r\n            </Jumbotron>\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <Link to={\"/books/\" + book._id}>\r\n                      <strong>\r\n                        {book.title} by {book.author}\r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n            */}\r\n          </Col>\r\n          <Col size=\"md-2\"></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;\r\n"]},"metadata":{},"sourceType":"module"}