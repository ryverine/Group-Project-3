{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React, { Component } from \"react\";\nimport SaveBtn from \"../components/SaveBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { ResultList, ResultItem } from \"../components/Results\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchTerms: \"\",\n      filter: \"\",\n      results: [],\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      link: \"\",\n      image: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.saveBook = function (book) {\n      /*\r\n        API.saveBook(book)\r\n          .then(res => {\r\n            // removed the saved book from the results list.\r\n              // var myFish = ['angel', 'clown', 'drum', 'mandarin', 'sturgeon'];\r\n            // var removed = myFish.splice(3, 1);\r\n            // removed is [\"mandarin\"]\r\n            // myFish is [\"angel\", \"clown\", \"drum\", \"sturgeon\"]\r\n              // find index of book\r\n            var bookIndex = -1;\r\n            for (var i = 0; i < this.state.results.length; i++)\r\n            {\r\n                if(this.state.results[i].link === book.link)\r\n                {\r\n                    bookIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n              if(bookIndex > -1)\r\n            {\r\n                var tmpResults = this.state.results;\r\n                var removedBook = tmpResults.splice(bookIndex,1);\r\n                this.setState({results: tmpResults});\r\n            }\r\n            })\r\n          .catch(err => console.log(err));\r\n        */\n    };\n\n    _this.doGoogleBooksSearch = function (event) {\n      /*\r\n       event.preventDefault();\r\n       var searchText = this.state.title.trim();\r\n       API.googleBooksSearch(searchText).then(res => \r\n         {\r\n           console.log(res.data.items);\r\n           this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" });\r\n             var resDataItems = res.data.items;\r\n           var searchResults = [];\r\n             if(resDataItems.length > 0)\r\n           {\r\n             for(var i = 0; i < resDataItems.length; i++)\r\n             {\r\n               var tmpAuthor = \"\";\r\n               var tmpImage = \"\";\r\n              \r\n               if (resDataItems[i].volumeInfo.authors)\r\n               {\r\n                 tmpAuthor = resDataItems[i].volumeInfo.authors[0];\r\n               }\r\n               else\r\n               {\r\n                 tmpAuthor = \"UNKNOWN\";\r\n               }\r\n                 if (resDataItems[i].volumeInfo.imageLinks)\r\n               {\r\n                 tmpImage = resDataItems[i].volumeInfo.imageLinks.thumbnail;\r\n               }\r\n               else\r\n               {\r\n                 tmpImage = \"no_thumbnail.png\";\r\n               }\r\n                 var tmpBook = {\r\n                 author: tmpAuthor,\r\n                 title: resDataItems[i].volumeInfo.title,\r\n                 description: resDataItems[i].volumeInfo.description,\r\n                 link: resDataItems[i].volumeInfo.infoLink,\r\n                 image: tmpImage\r\n               };\r\n                 searchResults.push(tmpBook);\r\n               }\r\n           }\r\n           else\r\n           {\r\n             var noResult = {\r\n               author: \"\",\r\n               title: \"No results found.\",\r\n               description: \"\",\r\n               link: \"\",\r\n               image: \"\"\r\n             };\r\n               searchResults.push(noResult);\r\n           }\r\n             this.setState({ \r\n             books: res.data, \r\n             title: \"\", \r\n             author: \"\", \r\n             synopsis: \"\",\r\n             results: searchResults\r\n            });\r\n           });\r\n       */\n    };\n\n    _this.doProductSearch = function (event) {\n      event.preventDefault();\n      var searchBy = _this.state.filter;\n\n      var searchTerm = _this.state.searchTerms.trim().toLowerCase(); // find space characters replace with +\n\n\n      searchTerm = req.params.terms.split(' ').join('+').trim();\n      searchBy = \"name\"; // for now filter is hard-coded, we do want the user to select their filter (name, brand, tag)\n\n      switch (searchBy) {\n        case \"name\":\n          _this.searchByName(searchTerm);\n\n          break;\n\n        case \"brand\":\n          _this.searchByBrand(searchTerm);\n\n          break;\n\n        case \"tag\":\n          _this.searchByTag(searchTerm);\n\n          break;\n\n        default:\n          alert(\"Unexpected Search Filter: \" + searchBy);\n          break;\n      }\n    };\n\n    _this.searchByName = function (searchTerm) {\n      console.log(\"(pages/Search.js) Searching By Name: \" + searchTerm);\n      API.searchProductByName(searchTerm).then(function (res) {\n        console.log(\"searchProductByName response: \", res);\n        /*\r\n        // removed the saved book from the results list.\r\n          // var myFish = ['angel', 'clown', 'drum', 'mandarin', 'sturgeon'];\r\n        // var removed = myFish.splice(3, 1);\r\n        // removed is [\"mandarin\"]\r\n        // myFish is [\"angel\", \"clown\", \"drum\", \"sturgeon\"]\r\n          // find index of book\r\n        var bookIndex = -1;\r\n        for (var i = 0; i < this.state.results.length; i++)\r\n        {\r\n            if(this.state.results[i].link === book.link)\r\n            {\r\n                bookIndex = i;\r\n                break;\r\n            }\r\n        }\r\n          if(bookIndex > -1)\r\n        {\r\n            var tmpResults = this.state.results;\r\n            var removedBook = tmpResults.splice(bookIndex,1);\r\n            this.setState({results: tmpResults});\r\n        }*/\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.searchByBrand = function (searchTerm) {\n      console.log(\"Searching By Name: \" + searchTerm);\n    };\n\n    _this.searchByTag = function (searchTerm) {\n      console.log(\"Searching By Name: \" + searchTerm);\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(Col, {\n        size: \"md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Route 420\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.searchTerms,\n        onChange: this.handleInputChange,\n        name: \"searchTerms\",\n        placeholder: \"Search for a Product!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.searchTerms,\n        onClick: this.doProductSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Find Product\"))), React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(Col, {\n        size: \"md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, this.state.results.length ? React.createElement(ResultList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, this.state.results.map(function (result) {\n        return React.createElement(ResultItem, {\n          key: result.link,\n          title: result.title,\n          author: result.author,\n          description: result.description,\n          link: result.link,\n          image: result.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(SaveBtn, {\n          onClick: function onClick() {\n            return _this2.saveBook(result);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"No Results to Display\")), React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\Ryan\\Documents\\UNC\\GIT\\Group-Project-3\\client\\src\\pages\\Search.js"],"names":["React","Component","SaveBtn","Jumbotron","API","Col","Row","Container","Input","FormBtn","ResultList","ResultItem","Search","state","searchTerms","filter","results","title","author","description","link","image","handleInputChange","event","target","name","value","setState","saveBook","book","doGoogleBooksSearch","doProductSearch","preventDefault","searchBy","searchTerm","trim","toLowerCase","req","params","terms","split","join","searchByName","searchByBrand","searchByTag","alert","console","log","searchProductByName","then","res","catch","err","length","map","result"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport SaveBtn from \"../components/SaveBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\n\r\nimport { Input, FormBtn } from \"../components/Form\";\r\n\r\nimport { ResultList, ResultItem } from \"../components/Results\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchTerms: \"\",\r\n    filter: \"\",\r\n    results: [],\r\n    title: \"\",\r\n    author: \"\",\r\n    description: \"\",\r\n    link: \"\",\r\n    image: \"\"\r\n  };\r\n\r\n  /*componentDidMount() {\r\n    this.loadBooks();\r\n  }*/\r\n\r\n  /*loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res =>\r\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };*/\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  saveBook = (book) => {\r\n  /*\r\n    API.saveBook(book)\r\n      .then(res => {\r\n        // removed the saved book from the results list.\r\n\r\n        // var myFish = ['angel', 'clown', 'drum', 'mandarin', 'sturgeon'];\r\n        // var removed = myFish.splice(3, 1);\r\n        // removed is [\"mandarin\"]\r\n        // myFish is [\"angel\", \"clown\", \"drum\", \"sturgeon\"]\r\n\r\n        // find index of book\r\n        var bookIndex = -1;\r\n        for (var i = 0; i < this.state.results.length; i++)\r\n        {\r\n            if(this.state.results[i].link === book.link)\r\n            {\r\n                bookIndex = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(bookIndex > -1)\r\n        {\r\n            var tmpResults = this.state.results;\r\n            var removedBook = tmpResults.splice(bookIndex,1);\r\n            this.setState({results: tmpResults});\r\n        }\r\n\r\n      })\r\n      .catch(err => console.log(err));\r\n    */};\r\n\r\n\r\n\r\n  doGoogleBooksSearch = event =>\r\n  {/*\r\n    event.preventDefault();\r\n    var searchText = this.state.title.trim();\r\n    API.googleBooksSearch(searchText).then(res => \r\n      {\r\n        console.log(res.data.items);\r\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" });\r\n\r\n        var resDataItems = res.data.items;\r\n        var searchResults = [];\r\n\r\n        if(resDataItems.length > 0)\r\n        {\r\n          for(var i = 0; i < resDataItems.length; i++)\r\n          {\r\n            var tmpAuthor = \"\";\r\n            var tmpImage = \"\";\r\n           \r\n            if (resDataItems[i].volumeInfo.authors)\r\n            {\r\n              tmpAuthor = resDataItems[i].volumeInfo.authors[0];\r\n            }\r\n            else\r\n            {\r\n              tmpAuthor = \"UNKNOWN\";\r\n            }\r\n\r\n            if (resDataItems[i].volumeInfo.imageLinks)\r\n            {\r\n              tmpImage = resDataItems[i].volumeInfo.imageLinks.thumbnail;\r\n            }\r\n            else\r\n            {\r\n              tmpImage = \"no_thumbnail.png\";\r\n            }\r\n\r\n            var tmpBook = {\r\n              author: tmpAuthor,\r\n              title: resDataItems[i].volumeInfo.title,\r\n              description: resDataItems[i].volumeInfo.description,\r\n              link: resDataItems[i].volumeInfo.infoLink,\r\n              image: tmpImage\r\n            };\r\n\r\n            searchResults.push(tmpBook);\r\n\r\n          }\r\n        }\r\n        else\r\n        {\r\n          var noResult = {\r\n            author: \"\",\r\n            title: \"No results found.\",\r\n            description: \"\",\r\n            link: \"\",\r\n            image: \"\"\r\n          };\r\n\r\n          searchResults.push(noResult);\r\n        }\r\n\r\n        this.setState({ \r\n          books: res.data, \r\n          title: \"\", \r\n          author: \"\", \r\n          synopsis: \"\",\r\n          results: searchResults\r\n         });\r\n\r\n      });\r\n    */};\r\n\r\n\r\n\r\n  doProductSearch = event =>\r\n  {\r\n    event.preventDefault();\r\n    var searchBy = this.state.filter;\r\n    var searchTerm = this.state.searchTerms.trim().toLowerCase();\r\n    // find space characters replace with +\r\n    searchTerm = req.params.terms.split(' ').join('+').trim();\r\n    searchBy = \"name\"; // for now filter is hard-coded, we do want the user to select their filter (name, brand, tag)\r\n\r\n    switch (searchBy) \r\n    {\r\n      case \"name\":\r\n        this.searchByName(searchTerm);\r\n        break;\r\n      case \"brand\":\r\n        this.searchByBrand(searchTerm);\r\n        break;\r\n      case \"tag\":\r\n        this.searchByTag(searchTerm);\r\n        break;\r\n      default:\r\n        alert(\"Unexpected Search Filter: \" + searchBy);\r\n        break;\r\n    }\r\n  }\r\n\r\n  searchByName = (searchTerm) =>\r\n  {\r\n    console.log(\"(pages/Search.js) Searching By Name: \" + searchTerm);\r\n\r\n    API.searchProductByName(searchTerm)\r\n      .then(res => {\r\n        console.log(\"searchProductByName response: \", res);\r\n        /*\r\n        // removed the saved book from the results list.\r\n\r\n        // var myFish = ['angel', 'clown', 'drum', 'mandarin', 'sturgeon'];\r\n        // var removed = myFish.splice(3, 1);\r\n        // removed is [\"mandarin\"]\r\n        // myFish is [\"angel\", \"clown\", \"drum\", \"sturgeon\"]\r\n\r\n        // find index of book\r\n        var bookIndex = -1;\r\n        for (var i = 0; i < this.state.results.length; i++)\r\n        {\r\n            if(this.state.results[i].link === book.link)\r\n            {\r\n                bookIndex = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(bookIndex > -1)\r\n        {\r\n            var tmpResults = this.state.results;\r\n            var removedBook = tmpResults.splice(bookIndex,1);\r\n            this.setState({results: tmpResults});\r\n        }*/\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n  }\r\n\r\n  searchByBrand = (searchTerm) =>\r\n  {\r\n    console.log(\"Searching By Name: \" + searchTerm);\r\n  }\r\n\r\n  searchByTag = (searchTerm) =>\r\n  {\r\n    console.log(\"Searching By Name: \" + searchTerm);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n        <Col size=\"md-2\"></Col>\r\n          <Col size=\"md-8\">\r\n            <br />\r\n            <Jumbotron>\r\n                {/* using image from public folder\r\n                <img src=\"headerImg.png\" alt=\"\"/> */}\r\n                <h1>Route 420</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.searchTerms}\r\n                onChange={this.handleInputChange}\r\n                name=\"searchTerms\"\r\n                placeholder=\"Search for a Product!\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(this.state.searchTerms)}\r\n                onClick={this.doProductSearch}\r\n              >\r\n                Find Product\r\n              </FormBtn>\r\n            </form>\r\n            </Col>\r\n            <Col size=\"md-2\"></Col>\r\n        </Row>\r\n        <Row>\r\n        <Col size=\"md-2\"></Col>\r\n        <Col size=\"md-8\">\r\n                {this.state.results.length ? (\r\n                <ResultList>\r\n                        {this.state.results.map(result => (\r\n                        <ResultItem key={result.link} \r\n                            title={result.title}\r\n                            author={result.author}\r\n                            description={result.description}\r\n                            link={result.link}\r\n                            image={result.image}\r\n                        >\r\n                            <SaveBtn onClick={() => this.saveBook(result)} />\r\n                        </ResultItem>\r\n                        ))}\r\n                </ResultList>\r\n                    ) : (\r\n                        <h3>No Results to Display</h3>\r\n                    )}\r\n          </Col>\r\n          <Col size=\"md-2\"></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}