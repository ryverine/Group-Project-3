{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\UNC\\\\GIT\\\\Group-Project-3\\\\client\\\\src\\\\pages\\\\Store.js\";\nimport React, { Component } from \"react\"; //import DeleteBtn from \"../components/DeleteBtn\";\n\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { TextArea, FormBtn } from \"../components/Form\"; //import { List, ListItem } from \"../components/List\";\n\nvar Store =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Store, _Component);\n\n  function Store() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Store);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Store)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentUser: \"0\",\n      newComment: \"\",\n      storeID: \"\",\n      name: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      description: \"\",\n      products: [],\n      storecomments: []\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.loadStore = function (storeId) {\n      var currentUserID = \"0\"; //check for local storage\n\n      if (JSON.parse(localStorage.getItem('currentUser')) != null) {\n        var lsData = JSON.parse(localStorage.getItem('currentUser'));\n        currentUserID = lsData.userID;\n      }\n\n      API.getStore(storeId).then(function (res) {\n        console.log(\"getStore response:\", res);\n\n        _this.setState({\n          currentUser: currentUserID,\n          newComment: \"\",\n          storeID: res.data._id,\n          name: res.data.name,\n          addressLine1: res.data.addressLine1,\n          addressLine2: res.data.addressLine2,\n          city: res.data.city,\n          state: res.data.state,\n          zip: res.data.zip,\n          description: res.data.description,\n          products: res.data.products,\n          storecomments: res.data.storecomments\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.submitComment = function (event) {\n      event.preventDefault(); // check value of current\n\n      if (_this.state.currentUser === \"0\") {\n        // tell user they need to sign in\n        console.log(\"SIGN IN TO COMMENT!\");\n      } else {\n        var curDate = new Date(Date.now());\n        var commentObj = {\n          comment: _this.state.newComment,\n          created: curDate,\n          updated: curDate,\n          user: _this.state.currentUser,\n          store: _this.state.storeID\n        };\n        console.log(\"=== NEW COMMENT SUBMMITED ===\", commentObj);\n        API.submitComment(commentObj).then(function (res) {\n          // this.setState({ newComment: \"\"});\n\n          /* \r\n              Problem: newly added comments do not populate.\r\n              The comments are created in the storecomments collection\r\n              But the comment ID is not added to the store in the stores collection.\r\n          */\n          // res.data._id = id of new comment\n          console.log(\"NEW COMMENT ADDED:\", res);\n\n          _this.loadStore(_this.state.storeID);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Store, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"window.location.href = \" + window.location.href); // http://localhost:3000/store/5d474e210953e00dbc14734e\n\n      var url = window.location.href;\n      var urlArray = url.split(\"/\");\n      console.log(\"urlArray\" + urlArray);\n      this.loadStore(urlArray[urlArray.length - 1]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Col, {\n        size: \"md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Store Page\")), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.addressLine1, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), this.state.addressLine2.length ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.addressLine2, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), this.state.city, \", \", this.state.state, \" \", this.state.zip), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.state.description), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Available Products\"), this.state.products.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.products.map(function (product) {\n        return React.createElement(\"div\", {\n          key: product._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/product/\" + product._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, product.name)), \" (\", product.brand, \")\");\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"No Products\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Community Discussion\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        value: this.state.newComment,\n        onChange: this.handleInputChange,\n        name: \"newComment\",\n        placeholder: \"Provide feedback...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.newComment,\n        onClick: this.submitComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Submit Comment\"))), this.state.storecomments.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.storecomments.map(function (comment) {\n        return React.createElement(\"div\", {\n          key: comment._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, comment.user, \" says...\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }), comment.comment, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }), \"Posted: \", comment.updated);\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"No Comments\"))), React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Store;\n}(Component);\n\nexport default Store;","map":{"version":3,"sources":["C:\\Users\\Ryan\\Documents\\UNC\\GIT\\Group-Project-3\\client\\src\\pages\\Store.js"],"names":["React","Component","Jumbotron","API","Col","Row","Container","TextArea","FormBtn","Store","state","currentUser","newComment","storeID","name","addressLine1","addressLine2","city","zip","description","products","storecomments","handleInputChange","event","target","value","setState","loadStore","storeId","currentUserID","JSON","parse","localStorage","getItem","lsData","userID","getStore","then","res","console","log","data","_id","catch","err","submitComment","preventDefault","curDate","Date","now","commentObj","comment","created","updated","user","store","window","location","href","url","urlArray","split","length","map","product","brand"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { TextArea, FormBtn } from \"../components/Form\";\r\n//import { List, ListItem } from \"../components/List\";\r\n\r\n\r\nclass Store extends Component {\r\n    state = {\r\n        currentUser: \"0\",\r\n        newComment: \"\",\r\n        storeID: \"\",\r\n        name: \"\",\r\n        addressLine1: \"\",\r\n        addressLine2: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        description: \"\",\r\n        products: [],\r\n        storecomments: []\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n    componentDidMount() \r\n    {\r\n        console.log(\"window.location.href = \" + window.location.href);\r\n        // http://localhost:3000/store/5d474e210953e00dbc14734e\r\n        var url = window.location.href;\r\n        var urlArray = url.split(\"/\");\r\n        console.log(\"urlArray\" + urlArray);\r\n        this.loadStore(urlArray[urlArray.length - 1]);\r\n    }\r\n\r\n    loadStore = (storeId) => {\r\n        var currentUserID = \"0\";\r\n        //check for local storage\r\n        if(JSON.parse(localStorage.getItem('currentUser')) != null)\r\n        {\r\n            var lsData = JSON.parse(localStorage.getItem('currentUser'));\r\n            currentUserID = lsData.userID;\r\n        }\r\n\r\n        API.getStore(storeId)\r\n        .then(res => {\r\n            console.log(\"getStore response:\", res);\r\n\r\n            \r\n                this.setState({ \r\n                    currentUser: currentUserID,\r\n                    newComment: \"\",\r\n                    storeID: res.data._id,\r\n                    name: res.data.name,\r\n                    addressLine1: res.data.addressLine1,\r\n                    addressLine2: res.data.addressLine2,\r\n                    city: res.data.city,\r\n                    state: res.data.state,\r\n                    zip: res.data.zip,\r\n                    description: res.data.description,\r\n                    products: res.data.products,\r\n                    storecomments: res.data.storecomments\r\n                });\r\n            }\r\n        )\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    submitComment = event => {\r\n        event.preventDefault();\r\n        // check value of current\r\n        if (this.state.currentUser === \"0\")\r\n        {\r\n            // tell user they need to sign in\r\n            console.log(\"SIGN IN TO COMMENT!\")\r\n        }\r\n        else\r\n        {\r\n            var curDate = new Date(Date.now());\r\n            var commentObj = {\r\n                comment: this.state.newComment,\r\n                created: curDate,\r\n                updated: curDate,\r\n                user: this.state.currentUser,\r\n                store: this.state.storeID\r\n            }\r\n\r\n            console.log(\"=== NEW COMMENT SUBMMITED ===\", commentObj);\r\n\r\n            API.submitComment(commentObj).then(res => \r\n            {\r\n                // this.setState({ newComment: \"\"});\r\n\r\n                /* \r\n                    Problem: newly added comments do not populate.\r\n                    The comments are created in the storecomments collection\r\n                    But the comment ID is not added to the store in the stores collection.\r\n                */\r\n\r\n                // res.data._id = id of new comment\r\n\r\n                console.log(\"NEW COMMENT ADDED:\", res);\r\n\r\n                this.loadStore(this.state.storeID);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-2\"></Col>\r\n                    <Col size=\"md-8\">\r\n                        <Jumbotron>\r\n                            <h1>Store Page</h1>\r\n                        </Jumbotron>\r\n                        <h4>{this.state.name}</h4>\r\n                        <div>\r\n                            {this.state.addressLine1} <br />\r\n                            {this.state.addressLine2.length ? (\r\n                                <span>\r\n                                    {this.state.addressLine2} <br />\r\n                                </span>\r\n                                ) : (\r\n                                    <span></span>\r\n                                )}\r\n                            {this.state.city}, {this.state.state} {this.state.zip}\r\n                        </div>\r\n                        <div>{this.state.description}</div>\r\n\r\n                        <div>\r\n                            <h4>Available Products</h4>\r\n                            {this.state.products.length ? (\r\n                                <div>\r\n                                    {this.state.products.map(product => (\r\n                                        <div key={product._id}> \r\n                                            <strong><a href={\"/product/\" + product._id}>{product.name}</a></strong> ({product.brand})\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <div>No Products</div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h4>Community Discussion</h4>\r\n                            <div>\r\n                                <form>\r\n                                    <TextArea\r\n                                    value={this.state.newComment}\r\n                                    onChange={this.handleInputChange}\r\n                                    name=\"newComment\"\r\n                                    placeholder=\"Provide feedback...\"\r\n                                    />\r\n                                    <FormBtn\r\n                                    disabled={!(this.state.newComment)}\r\n                                    onClick={this.submitComment}\r\n                                    >\r\n                                    Submit Comment\r\n                                    </FormBtn>\r\n                                </form>\r\n                            </div>\r\n                            {this.state.storecomments.length ? (\r\n                                <div>\r\n                                    {this.state.storecomments.map(comment => (\r\n                                        <div key={comment._id}> \r\n                                            <strong>{comment.user} says...</strong><br /> \r\n                                            {comment.comment}<br />\r\n                                            Posted: {comment.updated}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <div>No Comments</div>\r\n                            )}\r\n                        </div>\r\n                    </Col>\r\n                    <Col size=\"md-2\"></Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Store;\r\n"]},"metadata":{},"sourceType":"module"}